(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{594:function(t,a,s){"use strict";s.r(a);var e=s(74),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue原生项目研究小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue原生项目研究小结"}},[t._v("#")]),t._v(" Vue原生项目研究小结")]),t._v(" "),s("h3",{attrs:{id:"在vue原生项目中。组件的应用更广泛而且页面结构更加复杂-路由-以及自定义的内容逻辑。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在vue原生项目中。组件的应用更广泛而且页面结构更加复杂-路由-以及自定义的内容逻辑。"}},[t._v("#")]),t._v(" 在Vue原生项目中。组件的应用更广泛而且页面结构更加复杂，路由，以及自定义的内容逻辑。")]),t._v(" "),s("p",[t._v("页面耦合逻辑")]),t._v(" "),s("p",[t._v("然后之前有做过微信小程序的页面分析，关于vue的页面布局如下")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("├── build                                       // webpack配置文件，\n├── config                                      // 项目打包路径。阅读配置手册进行配置\n├── elm                                         // 上线项目文件，放在服务器即可正常访问\n├── src                                         // 源码目录\n│   ├── components                              // 组件||通用组件，购物车，列表，评价等。\n│   ├── config                                  // 基本配置||rem转换，baseUrl,处理参数\n│   ├── page\t\t\t\t\t\t\t\t\t// pages页面|页面内的逻辑\n│   ├── router\t\t\t\t\t\t\t\t\t// 路由配置,说明所有页面的路径\n│   ├── service                                 // 数据交互统一调配||用接口拿数据\n│   ├── store                                   // vuex的状态管理????虽然暂时用不到\n│  \t├── style  \t\t\t\t\t\t\t\t\t// 样式文件目录\n│   ├── App.vue                                 // 页面入口文件||组件在各个page的正确引用\t\n│   └── main.js                                 // 程序入口文件，加载各种公共组件\n├── favicon.ico                                 // 图标\n├── index.html                                  // 入口html文件\n")])])]),s("h2",{attrs:{id:"浅显研究的话就是vue更多的是一些状态管理以及跨页面的通信-通过多重复用的组件实现代码页面。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅显研究的话就是vue更多的是一些状态管理以及跨页面的通信-通过多重复用的组件实现代码页面。"}},[t._v("#")]),t._v(" 浅显研究的话就是vue更多的是一些状态管理以及跨页面的通信，通过多重复用的组件实现代码页面。")]),t._v(" "),s("h1",{attrs:{id:"vue-内容详细比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-内容详细比较"}},[t._v("#")]),t._v(" Vue 内容详细比较")]),t._v(" "),s("h2",{attrs:{id:"学习路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习路径"}},[t._v("#")]),t._v(" 学习路径")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("|_____v-on//v-bind[√]\n|\n|_____组件基础，事件处理[√]\n|\n|_____上手向(教程)||计算属性，侦听属性对于wxmp的比较\n|\n|_____生产代码中校对的问题以及组件复用\n|\n|_____特殊处理，常见实例方法属性||$emit，$mount\n|\n|_____API向学习||全局API，全局配置，内置组件，指令||VUEX，vue-router,vue-cli\n|\n|_____cookbook以及风格指南\n\n\n")])])]),s("h2",{attrs:{id:"关于v-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于v-on"}},[t._v("#")]),t._v(" 关于v-on ||@")]),t._v(" "),s("p",[t._v("首先就是@，对于绑定的操作之外，v-on更多的支持了键盘修饰符的操作，如key-up等操作。以及一些防止事假冒泡的操作内容。@click.stop.甚至可以绑定一个动态事件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\x3c!-- 动态事件 (2.6.0+) --\x3e\n<button v-on:[event]="doThis"></button>\n\x3c!-- 内联语句 --\x3e\n<button v-on:click="doThat(\'hello\', $event)"></button>\n\x3c!-- 点击回调只会触发一次 --\x3e\n<button v-on:click.once="doThis"></button>\n\x3c!-- 对象语法 (2.4.0+) --\x3e\n<button v-on="{ mousedown: doThis, mouseup: doThat }"></button>\n\n')])])]),s("h3",{attrs:{id:"在子组件上监听自定义事件-当子组件触发-my-event-时将调用事件处理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在子组件上监听自定义事件-当子组件触发-my-event-时将调用事件处理器"}},[t._v("#")]),t._v(" 在子组件上监听自定义事件 (当子组件触发“my-event”时将调用事件处理器)：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<my-component @my-event="handleThis"></my-component>\n\n\x3c!-- 内联语句 --\x3e\n<my-component @my-event="handleThis(123, $event)"></my-component>\n\n\x3c!-- 组件中的原生事件 --\x3e\n<my-component @click.native="onClick"></my-component>\n\n\n')])])]),s("h3",{attrs:{id:"事件处理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件处理器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/events.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("事件处理器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("有时也需要在内联语句处理器中访问原始的 DOM 事件。可以用特殊变量 $event 把它传入方法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<button v-on:click=\"warn('Form cannot be submitted yet.', $event)\">\n  Submit\n</button>\n\nmethods: {\n  warn: function (message, event) {\n    // 现在我们可以访问原生事件对象\n    if (event) event.preventDefault()\n    alert(message)\n  }\n}\n")])])]),s("h3",{attrs:{id:"组件基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件基础"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件基础"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"通过-prop-向子组件传递数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-prop-向子组件传递数据"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components.html#%E9%80%9A%E8%BF%87-Prop-%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过 Prop 向子组件传递数据"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("尚不是很理解")]),t._v(" "),s("h2",{attrs:{id:"v-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-bind"}},[t._v("#")]),t._v(" v-bind || :")]),t._v(" "),s("p",[t._v("动态绑定多个特性以及组件prop到表达式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\x3c!-- prop 绑定。“prop”必须在 my-component 中声明。--\x3e\n<my-component :prop="someThing"></my-component>\n\x3c!-- 通过 $props 将父组件的 props 一起传给子组件 --\x3e\n<child-component v-bind="$props"></child-component>\n')])])]),s("h2",{attrs:{id:"为什么使用props传递样式属性以及其他回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用props传递样式属性以及其他回调函数"}},[t._v("#")]),t._v(" 为什么使用Props传递样式属性以及其他回调函数?")]),t._v(" "),s("p",[t._v("在页面和组件中，组件的复用相当频繁，所以将一些需要的组件属性，定义成prop。\n然后在子组件内定义数据类型以及默认值，在父组件内获取以及传递值。")]),t._v(" "),s("p",[t._v("所以所有的prop都是单项数据流的。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("所有的prop都使得其父子prop之间形成了一个单向下行绑定：父级prop的更新会向下流动到子组件\n中，但是反过来则不行。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。\n\n\n父组件在调用子组件时用v-on把事件传给子组件，子组件用this.$emit调用父组件传过来的事件。\n")])])]),s("h3",{attrs:{id:"绑定class-active-isactive-以及绑定props子父组件传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定class-active-isactive-以及绑定props子父组件传参"}},[t._v("#")]),t._v(" 绑定class  {active : isActive},以及绑定props子父组件传参")]),t._v(" "),s("p",[t._v("·在对象当中，CSS 的属性名要用驼峰式表达：fontSize解析成font-size")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("licenses-button"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":disabled")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("disabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylecss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("callLicenses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{keyText}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nprops: {\n    stylecss: { //输入框样式\n    type: Object\n},\n}\n\n//多个动态绑定的样式\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("static"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ active: isActive, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("text-danger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(": hasError }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\ndata: {\n  isActive: true,\n  hasError: false\n}\n//结果渲染为\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("static active"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("h2",{attrs:{id:"路由规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由规则"}},[t._v("#")]),t._v(" 路由规则")]),t._v(" "),s("h3",{attrs:{id:"定义-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义-component"}},[t._v("#")]),t._v(" 定义 component")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reportList")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("r")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/pages/reportList/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"定义路由规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义路由规则"}},[t._v("#")]),t._v(" 定义路由规则")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("routes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reportList'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    redirect"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/reportList'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    \n")])])]),s("h3",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('   <div id="app">        <h1>Hello VueRouter</h1>        <p>            \x3c!-- 使用 router-link 组件来导航. --\x3e            \x3c!-- 通过传入 `to` 属性指定链接. --\x3e            \x3c!-- <router-link> 默认会被渲染成一个 `<a>` 标签 --\x3e            \x3c!-- 属性 `to` 对应生成  `<a>` 标签的 `href` 属性--\x3e            <router-link to="/foo">Foo</router-link>            <router-link to="/bar">Bar</router-link>        </p>        \x3c!--路由匹配的组件在此处渲染--\x3e        <router-view></router-view>    </div>\n')])])]),s("h2",{attrs:{id:"使用组件化方法的mint-ul"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用组件化方法的mint-ul"}},[t._v("#")]),t._v(" 使用组件化方法的mint-Ul")]),t._v(" "),s("h2",{attrs:{id:"页面标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面标签"}},[t._v("#")]),t._v(" 页面标签")]),t._v(" "),s("h3",{attrs:{id:"按需加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按需加载"}},[t._v("#")]),t._v(" 按需加载")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Header")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Toast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Field")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Indicator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" from "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mint-ui'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"页面公用方法在main-js中引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面公用方法在main-js中引入"}},[t._v("#")]),t._v(" 页面公用方法在main.js中引入")]),t._v(" "),s("p",[t._v("goback&&tourl等")]),t._v(" "),s("p",[t._v("其他组件定义可以在components内自定义名称")]),t._v(" "),s("h2",{attrs:{id:"代码逻辑-多页面管理-vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码逻辑-多页面管理-vuex"}},[t._v("#")]),t._v(" 代码逻辑（多页面管理）vuex")]),t._v(" "),s("p",[t._v("实际上的使用还不是很清楚")]),t._v(" "),s("p",[t._v("大概就是放置了五个原生方法，然后组件通过mapState函数进行使用")]),t._v(" "),s("h4",{attrs:{id:"mapstate辅助方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapstate辅助方法"}},[t._v("#")]),t._v(" mapState辅助方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    computed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        countAlias"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'count'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 别名 `count` 等价于 state => state.count    })}")]),t._v("\n")])])]),s("p",[t._v("其他同时也可以放一下公用方法")]),t._v(" "),s("h3",{attrs:{id:"关于state、getter、muataion、action、module的作用问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于state、getter、muataion、action、module的作用问题"}},[t._v("#")]),t._v(" 关于State、Getter、Muataion、Action、Module的作用问题")]),t._v(" "),s("h4",{attrs:{id:"getter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getter"}},[t._v("#")]),t._v(" Getter")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果我们需要对state对象进行做处理计算，如下：computed: {    doneTodosCount () {        return this.$store.state.todos.filter(todo => todo.done).length    }}如果多个组件都要进行这样的处理，那么就要在多个组件中复制该函数。这样是很没有效率的事情，当这个处理过程更改了，还有在多个组件中进行同样的更改，这就更加不易于维护。Vuex中getters对象，可以方便我们在store中做集中的处理。Getters接受state作为第一个参数：const store = new Vuex.Store({  state: {    todos: [      { id: 1, text: '...', done: true },      { id: 2, text: '...', done: false }    ]  },  getters: {    doneTodos: state => {      return state.todos.filter(todo => todo.done)    }  }})在Vue中通过store.getters对象调用。computed: {  doneTodos () {    return this.$store.getters.doneTodos  }}Getter也可以接受其他getters作为第二个参数：getters: {  doneTodos: state => {      return state.todos.filter(todo => todo.done)  },  doneTodosCount: (state, getters) => {    return getters.doneTodos.length  }}\n")])])]),s("p",[t._v("就是在getter里面是一些计算属性的公用方法，通过在vuex里面的状态注册之后可以进行所有页面的访问引用，完成组件化的思想以及实现。\n与一般的公用方法不同的是，getter的效率更高而且有一些特定方式访问，并且可以多个参数进行调用。")]),t._v(" "),s("h4",{attrs:{id:"mapgetters辅助函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapgetters辅助函数"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://juejin.im/entry/58cb4c36b123db00532076a2",target:"_blank",rel:"noopener noreferrer"}},[t._v("mapGetters辅助函数"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("略过")]),t._v(" "),s("h4",{attrs:{id:"mutations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutations"}},[t._v("#")]),t._v(" Mutations")]),t._v(" "),s("p",[t._v("vuex中唯一用来更改state中的状态的方法")]),t._v(" "),s("p",[t._v("每一个mutation都有一个事件类型type和一个回调函数handler")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const store = new Vuex.Store({  state: {    count: 1  },  mutations: {    increment (state) {      // 变更状态      state.count++    }  }})\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("调用mutation，需要通过store.commit方法调用mutation type：store.commit('increment')\n")])])]),s("h5",{attrs:{id:"payload-提交载荷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#payload-提交载荷"}},[t._v("#")]),t._v(" Payload 提交载荷")]),t._v(" "),s("p",[t._v("也可以向store.commit传入第二参数，也就是mutation的payload:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mutaion: {    increment (state, n) {        state.count += n;    }}store.commit('increment', 10);\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("不例外，mutations也有映射函数mapMutations，帮助我们简化代码，使用mapMutations辅助函数将组件中的methods映射为store.commit调用。import { mapMutations } from 'vuex'export default {  // ...  methods: {    ...mapMutations([      'increment' // 映射 this.increment() 为 this.$store.commit('increment')    ]),    ...mapMutations({      add: 'increment' // 映射 this.add() 为 this.$store.commit('increment')    })  }}注 Mutations必须是同步函数。如果我们需要异步操作，Mutations就不能满足我们需求了，这时候我们就需要Actions了\n")])])]),s("h3",{attrs:{id:"action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[t._v("#")]),t._v(" Action")]),t._v(" "),s("p",[t._v("分发 Action\nAction 通过 store.dispatch 方法触发：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("store.dispatch('increment') mutation 必须同步执行,而action 内部执行异步操作：actions: {  incrementAsync ({ commit }) {    setTimeout(() => {      commit('increment')    }, 1000)  }}\n")])])]),s("h3",{attrs:{id:"vuex独立模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex独立模块"}},[t._v("#")]),t._v(" VueX独立模块")]),t._v(" "),s("p",[t._v("如果想要独立store中的其他方法，也可以通过创建index.js引入相应文件进行")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Vue from 'vue'import Vuex from 'vuex'import mutations from './mutations'import actions from './action'import getters from './getters'\n")])])]),s("p",[t._v("最后将接口暴露出来，进行调用。state还是不变，在index.js中进行声明。")]),t._v(" "),s("h3",{attrs:{id:"其他内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他内容"}},[t._v("#")]),t._v(" 其他内容")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000018263418",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://my.oschina.net/u/2331760/blog/468672?p=%7B%7BcurrentPage+1%7D%7D",target:"_blank",rel:"noopener noreferrer"}},[t._v("立即执行函数与闭包"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/wangfupeng1988/p/3994065.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解闭包"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000018634744",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端面试题 VUE"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c64d15d6fb9a049d37f9c20",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端interview精华"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c970d16f265da612d634475",target:"_blank",rel:"noopener noreferrer"}},[t._v("小程序实现原理解析"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"项目解析rss-reader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目解析rss-reader"}},[t._v("#")]),t._v(" 项目解析"),s("a",{attrs:{href:"https://github.com/mrgodhani/rss-reader/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("RSS-READER"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("学习目的：vue的代码规范以及国外的技术栈差别")]),t._v(" "),s("p",[t._v("生命周期函数写在main.vue里面")]),t._v(" "),s("p",[t._v("组件方法不写在组件内，this.$store代理")]),t._v(" "),s("h2",{attrs:{id:"如何从零开始构建一个健康的vue项目以及大型的单页面项目框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何从零开始构建一个健康的vue项目以及大型的单页面项目框架"}},[t._v("#")]),t._v(" 如何从零开始构建一个健康的vue项目以及大型的单页面项目框架")]),t._v(" "),s("h3",{attrs:{id:"针对简单的小型单页面项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#针对简单的小型单页面项目"}},[t._v("#")]),t._v(" 针对简单的小型单页面项目")]),t._v(" "),s("p",[t._v("(对比小程序)")]),t._v(" "),s("p",[t._v("首先可以不需要很多公用方法的封装以及其他资源的引用，特别是vueX等状态管理器，直接在组件内运用相关的计算方法即可。不需要考虑组件复用以及其他逻辑。路由等也不需要考虑的很复杂。")]),t._v(" "),s("p",[t._v("小程序，很多内容可以直接不用考虑，只需要封装一些简单的请求方法或者是公用的数据处理方法。\n像是对于对象，数组的公用处理方法，ajax请求，API接口。\n其他只需要关注页面本身的逻辑即可，\n由于vue本身的资源丰富，所以可以使用的组将更多，复杂度较小程序也更高。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.$store.commit('stateFn',obj); //状态管理  // 将需要更新的值传到vuex,然后通过mutation方法(vuex中唯一用来更改state中的状态的方法)更改目标值\n")])])]),s("p",[t._v("复杂的问题在于，很多请求的实现都是用了许许多多不同的组件实现的。而这些组件之中又有着不同的依赖，部分也都是相互依赖的modules。\n像是axios，h5_native_proxy(自定义),proxy(?)等")]),t._v(" "),s("p",[t._v("使用辅助函数mapstate的作用即是\n当一个组件需要获取多个状态时候，将这些状态都声明为计算属性会有些重复和冗余。")]),t._v(" "),s("p",[t._v("通过状态管理辅助函数完成对于单一状态树下的模块化管理")]),t._v(" "),s("h3",{attrs:{id:"针对大型的多页面项目-elm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#针对大型的多页面项目-elm"}},[t._v("#")]),t._v(" 针对大型的多页面项目(elm)")]),t._v(" "),s("p",[t._v("因为页面数量众多，相应的，引入的组件也更多，对于状态的操作也更频繁。页面之间的跳转逻辑颗牙哟独立出来，同时，考虑代码的维护性\n很多功能并不需要写在store中，直接在页面内使用即可。")]),t._v(" "),s("p",[t._v("而且一般的页面逻辑并不复杂，都是一些简单方法的调用，getData，传参，数据处理，组件页面因为涉及到复用而更加繁琐。")]),t._v(" "),s("p",[t._v("大型项目的vuex store写法即是，将一些types单独暴露在其他的js中，然后在需要引入的地方\n正确引入，然后将其用标准语法")]),t._v(" "),s("h4",{attrs:{id:"again-更改-vuex-的-store-中的状态的唯一方法是提交-mutation。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#again-更改-vuex-的-store-中的状态的唯一方法是提交-mutation。"}},[t._v("#")]),t._v(" again 更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" increment (state) {      // 变更状态      state.count++    }以上的标准写法，过渡成  [INIT_BUYCART](state) {    ……………………表达式},这种写法是 ES2015 风格的计算属性命名功能来使用一个常量作为函数名这个称之为type，意义就是唤醒上面的  handler,store.commit('increment')为store.commit 传入额外的参数，即 mutation 的 载荷（payload）store.commit('increment', {  amount: 10})\n")])])]),s("h4",{attrs:{id:"vue使用mixin生命全局变量以及定义一些错误展示信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue使用mixin生命全局变量以及定义一些错误展示信息"}},[t._v("#")]),t._v(" vue使用mixin生命全局变量以及定义一些错误展示信息")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Vueprototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jsconst methods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mixin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            nodata"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nodataView'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            errordefaultImg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this.src=\"'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../image/fail.png"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    components"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        nodataView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div class="nodata"><img src="\'')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../image/nodata.png"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'" width="222"/><p>暂无数据</p></div>\'')]),t._v("        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    methods"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"vue3-0-过渡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0-过渡"}},[t._v("#")]),t._v(" [Vue3.0 过渡](")])])}),[],!1,null,null,null);a.default=n.exports}}]);