(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{596:function(t,a,s){"use strict";s.r(a);var e=s(74),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ryf学es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ryf学es6"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://github.com/ruanyf/es6tutorial/blob/gh-pages/docs/array.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ryf学ES6"),s("OutboundLink")],1)]),t._v(" "),s("ol",[s("li",[t._v("复制对象数组")])]),t._v(" "),s("p",[t._v("ES5使用concat()方法复制数组对象，ES6直接使用...[]拓展运算符")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("!!双叹号表示  "),s("code",[t._v("arrgument ? true : false")])])]),t._v(" "),s("li",[s("p",[t._v("表示none or have")])]),t._v(" "),s("li",[s("p",[t._v("关于非循环渲染列表的最佳实践之一（idea from college）")])])]),t._v(" "),s("div",{staticClass:"language-javascipt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("setAll(type){\n\tlet tempObj = {\n\t\t1:()=>{\n\t\t\tthis.first = {id:0,name:'全部'};\n\t\t\tthis.besure();\n\t\t},\n\t\t2:()=>{\n\t\t\tthis.besure();\n\t\t},\n\t\t3:()=>{\n\t\t\tthis.besure();\n\t\t}\n\t}\n\ttempObj[type]();\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("数组的完全填充内容\n将一个数组的内容全部变成false，index为0的为true")])]),t._v(" "),s("p",[t._v("Array.from( isArrayLike, ()=>{})有个问题。即是会影响原来的数组")]),t._v(" "),s("p",[t._v("isArrayLike.fill(false),直接完成需求。每次都会重新填充，后面可以加上两个参数，")]),t._v(" "),s("p",[t._v("fill方法还可以接受第二个和第三个参数，用于指定填充的起始位置和结束位置。\n['a', 'b', 'c'].fill(7, 1, 2)\n// ['a', 7, 'c']\n上面代码表示，fill方法从 1 号位开始，向原数组填充 7，到 2 号位之前结束。")]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("新建一个空数组or NaN数组 or Null数组 Or undefined数组 or nothing数值\nundefined")])]),t._v(" "),s("p",[s("code",[t._v("Array.from({ length: 3 });")])]),t._v(" "),s("p",[t._v("null||NaN||undefined\n"),s("code",[t._v("Array.from({ length: 2 }, () => null)")])]),t._v(" "),s("p",[t._v("空的数组")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Array(length);\nArray(12).fill(false);\n//[false, false, false, false, false, false, false, false, false, false, false, false]\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("与非逻辑运算符与if之间的关系")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("&& || \n以及用二者来代替if的逻辑关系    \n\n表达式&&结果 ||另一个结果   ==  if(表达式){结果}else{另一个结果}\n\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[s("a",{attrs:{href:"https://github.com/ruanyf/es6tutorial/blob/gh-pages/docs/style.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6语法规范相关"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("使用const 以及 let 代替var ，并使用解构赋值的思想来对于一些变量的声明进行简化\n或者直接 安装 Airbnb 语法规则，以及 import、a11y、react 插件。")]),t._v(" "),s("p",[t._v("$ npm i -g eslint-config-airbnb\n$ npm i -g eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react\n在项目的根目录下新建一个.eslintrc文件，配置 ESLint。")]),t._v(" "),s("p",[t._v('{\n"extends": "eslint-config-airbnb"\n}\n现在就可以检查，当前项目的代码是否符合预设的规则')]),t._v(" "),s("p",[t._v("9.数组去重方法\nnew set()")])])}),[],!1,null,null,null);a.default=n.exports}}]);